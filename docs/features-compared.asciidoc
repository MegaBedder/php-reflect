= API Features compared
:description: Compare both Reflection API between PHP5 and Reflect
:jumbotron:
:icons!:
:iconsfont: font-awesome
:iconsfontdir: ./fonts/font-awesome
include::revision.asciidoc[]
include::attributes.asciidoc[]

== Class Reflection

[options="header,autowidth", cols="5,2,2", role="table table-bordered table-striped"]
|===========================
| Feature / Methods                                    | PHP5             | Reflect
| class reports information about a class
| http://www.php.net/manual/en/class.reflectionclass.php[ReflectionClass]
| Bartlett\Reflect\Model\ClassModel
| *__construct* - Constructs a ReflectionClass         | icon:check[]     | icon:check[]
| *__toString* - Returns the string representation of the ReflectionClass object
| icon:check[]     | icon:check[]
| *export* - Exports a class                           | icon:check[]     |
| *getConstant* - Gets defined constant                | icon:check[]     | icon:check[]
| *getConstants* - Gets constants                      | icon:check[]     | icon:check[]
| *getConstructor* - Gets the constructor of the class | icon:check[]     |
| *getDefaultProperties* - Gets default properties     | icon:check[]     |
| *getDocComment* - Gets doc comments                  | icon:check[]     | icon:check[]
| *getEndLine* - Gets end line                         | icon:check[]     | icon:check[]
| *getExtension* - Gets a ReflectionExtension object for the extension which defined the class
| icon:check[]     | icon:check[]
| *getExtensionName* - Gets the name of the extension which defined the class
| icon:check[]     | icon:check[]
| *getFileName* - Gets the filename of the file in which the class has been defined
| icon:check[]     | icon:check[]
| *getInterfaceNames* - Gets the interface names       | icon:check[]     |
| *getInterfaces* -  Gets the interfaces               | icon:check[]     | icon:check[]
| *getMethod* - Gets a ReflectionMethod for a class method
| icon:check[]     | icon:check[]
| *getMethods* - Gets an array of methods              | icon:check[]     | icon:check[]
| *getModifiers* - Gets modifiers                      | icon:check[]     |
| *getName* - Gets class name                          | icon:check[]     | icon:check[]
| *getNamespaceName* - Gets namespace name             | icon:check[]     | icon:check[]
| *getParentClass* - Gets parent class                 | icon:check[]     |
| *getProperties* - Gets properties                    | icon:check[]     |
| *getProperty* - Gets a ReflectionProperty for a class's property
| icon:check[]     |
| *getShortName* - Gets short name                     | icon:check[]     | icon:check[]
| *getStartLine* - Gets starting line number           | icon:check[]     | icon:check[]
| *getStaticProperties* - Gets static properties       | icon:check[]     |
| *getStaticPropertyValue* - Gets static property value
| icon:check[]     |
| *getTraitAliases* - Returns an array of trait aliases
| icon:check[]     |
| *getTraitNames* - Returns an array of names of traits used by this class
| icon:check[]     |
| *getTraits* - Returns an array of traits used by this class
| icon:check[]     |
| *hasConstant* - Checks if constant is defined        | icon:check[]     | icon:check[]
| *hasMethod* - Checks if method is defined            | icon:check[]     | icon:check[]
| *hasProperty* - Checks if property is defined        | icon:check[]     |
| *implementsInterface* - Implements interface         | icon:check[]     |
| *inNamespace* - Checks if class in namespace         | icon:check[]     | icon:check[]
| *isAbstract* - Checks if class is abstract           | icon:check[]     | icon:check[]
| *isCloneable* - Returns whether this class is cloneable
| icon:check[]     | icon:check[]
| *isFinal* - Checks if class is final                 | icon:check[]     | icon:check[]
| *isInstance* - Checks class for instance             | icon:check[]     |
| *isInstantiable* - Checks if the class is instantiable
| icon:check[]     | icon:check[]
| *isInterface* - Checks if the class is an interface  | icon:check[]     | icon:check[]
| *isInternal* - Checks if class is defined internally by an extension, or the core
| icon:check[]     |
| *isIterateable* - Checks if iterateable              | icon:check[]     | icon:check[]
| *isSubclassOf* - Checks if a subclass                | icon:check[]     | icon:check[]
| *isTrait* - Returns whether this is a trait          | icon:check[]     | icon:check[]
| *isUserDefined* -  Checks if user defined            | icon:check[]     | icon:check[]
| *newInstance* - Creates a new class instance from given arguments
| icon:check[]     |
| *newInstanceArgs* - Creates a new class instance from given arguments
| icon:check[]     |
| *newInstanceWithoutConstructor* -  Creates a new class instance without invoking the constructor
| icon:check[]     |
| *setStaticPropertyValue* - Sets static property value
| icon:check[]     |
|===========================

== Constant Reflection

WARNING: This class does not exist in PHP5 Reflection API

[options="header,autowidth", cols="7,2", role="table table-bordered table-striped"]
|===========================
| Feature / Methods                                    | Reflect
| class reports information about a constant           | Bartlett\Reflect\Model\ConstantModel
| *__construct* - Constructs a Reflection Constant     | icon:check[]
| *__toString* - Returns the string representation of the Reflection Constant object
| icon:check[]
| *getDocComment* - Gets doc comments                  | icon:check[]
| *getExtension* - Gets a ReflectionExtension object for the extension which defined the constant
| icon:check[]
| *getExtensionName* - Gets the name of the extension which defined the constant
| icon:check[]
| *getFileName* - Gets the filename of the file in which the constant has been defined
| icon:check[]
| *getName* - Gets constant name                       | icon:check[]
| *getNamespaceName* - Gets namespace name             | icon:check[]
| *getShortName* - Gets short name                     | icon:check[]
| *getValue* - Gets value                              | icon:check[]
| *inNamespace* - Checks if in namespace               | icon:check[]
| *isInternal* - Checks if constant is defined internally by an extension, or the core
| icon:check[]
| *isMagic* - Checks whether it's a magic constant     | icon:check[]
|===========================

== Function Reflection

[options="header,autowidth", cols="5,2,2", role="table table-bordered table-striped"]
|===========================
| Feature / Methods                                    | PHP5             | Reflect
| class reports information about a function
| http://www.php.net/manual/en/class.reflectionfunction.php[ReflectionFunction]
| Bartlett\Reflect\Model\FunctionModel
| *__construct* - Constructs a ReflectionFunction      | icon:check[]     | icon:check[]
| *__toString* - Returns the string representation of the ReflectionFunction object
| icon:check[]     | icon:check[]
| *export* - Exports a function                        | icon:check[]     |
| *getClosure* - Returns a dynamically created closure for the function
| icon:check[]     |
| *invoke* - Invokes function                          | icon:check[]     |
| *invokeArgs* - Invokes function with args            | icon:check[]     |
| *isDisabled* - Checks if function is disabled        | icon:check[]     |
|===========================

== Function Abstract Reflection

[options="header,autowidth", cols="5,2,2", role="table table-bordered table-striped"]
|===========================
| Feature / Methods                                    | PHP5             | Reflect
| A parent class to ReflectionFunction
| http://www.php.net/manual/en/class.reflectionfunctionabstract.php[ReflectionFunctionAbstract]
| Bartlett\Reflect\Model\AbstractFunctionModel
| *__clone* - Clones function                          | icon:check[]     |
| *getClosureScopeClass* - Returns the scope associated to the closure
| icon:check[]     |
| *getClosureThis* - Returns this pointer bound to closure
| icon:check[]     |
| *getDocComment* - Gets doc comments                  | icon:check[]     | icon:check[]
| *getEndLine* - Gets end line                         | icon:check[]     | icon:check[]
| *getExtension* - Gets a ReflectionExtension object for the extension which defined the function
| icon:check[]     | icon:check[]
| *getExtensionName* - Gets the name of the extension which defined the function
| icon:check[]     | icon:check[]
| *getFileName* - Gets the filename of the file in which the function has been defined
| icon:check[]     | icon:check[]
| *getName* - Gets function name                       | icon:check[]     | icon:check[]
| *getNamespaceName* - Gets namespace name             | icon:check[]     | icon:check[]
| *getNumberOfParameters* -  Gets number of parameters | icon:check[]     | icon:check[]
| *getNumberOfRequiredParameters* - Gets number of required parameters
| icon:check[]     | icon:check[]
| *getParameters* -  Gets parameters                   | icon:check[]     | icon:check[]
| *getShortName* - Gets function short name            | icon:check[]     | icon:check[]
| *getStartLine* - Gets starting line number           | icon:check[]     | icon:check[]
| *getStaticVariables* - Gets static variables         | icon:check[]     |
| *inNamespace* - Checks if function in namespace      | icon:check[]     | icon:check[]
| *isClosure* - Checks if closure                      | icon:check[]     | icon:check[]
| *isDeprecated* - Checks if function deprecated       | icon:check[]     |
| *isGenerator* - Returns whether this function is a generator
| icon:check[]     |
| *isInternal* - Checks if function is defined internally by an extension, or the core
| icon:check[]     | icon:check[]
| *isUserDefined* - Checks if user defined             | icon:check[]     |
| *returnsReference* - Checks if returns reference     | icon:check[]     |
|===========================

== Method Reflection

[options="header,autowidth", cols="5,2,2", role="table table-bordered table-striped"]
|===========================
| Feature / Methods                                    | PHP5             | Reflect
| class reports information about a function
| http://www.php.net/manual/en/class.reflectionmethod.php[ReflectionMethod]
| Bartlett\Reflect\Model\MethodModel
| *__construct* - Constructs a ReflectionMethod        | icon:check[]     | icon:check[]
| *__toString* - Returns the string representation of the ReflectionMethod object
| icon:check[]     | icon:check[]
| *export* - Exports a method                          | icon:check[]     |
| *getClosure* - Returns a dynamically created closure for the method
| icon:check[]     |
| *getDeclaringClass* -  Gets declaring class for the reflected method
| icon:check[]     |
| *getModifiers* - Gets the method modifiers           | icon:check[]     |
| *getPrototype* -  Gets the method prototype          | icon:check[]     |
| *invoke* - Invokes method                            | icon:check[]     |
| *invokeArgs* - Invokes method with args              | icon:check[]     |
| *isAbstract* - Checks if method is abstract          | icon:check[]     | icon:check[]
| *isConstructor* - Checks if method is a constructor  | icon:check[]     | icon:check[]
| *isDestructor* - Checks if method is a destructor    | icon:check[]     | icon:check[]
| *isFinal* - Checks if method is final                | icon:check[]     | icon:check[]
| *isPrivate* - Checks if method is private            | icon:check[]     | icon:check[]
| *isProtected* - Checks if method is protected        | icon:check[]     | icon:check[]
| *isPublic* - Checks if method is public              | icon:check[]     | icon:check[]
| *isStatic* - Checks if method is static              | icon:check[]     | icon:check[]
| *setAccessible* - Set method accessibility           | icon:check[]     |
|===========================

== Parameter Reflection

[options="header,autowidth", cols="5,2,2", role="table table-bordered table-striped"]
|===========================
| Feature / Methods                                    | PHP5             | Reflect
| class reports information about a parameter
| http://www.php.net/manual/en/class.reflectionparameter.php[ReflectionParameter]
| Bartlett\Reflect\Model\ParameterModel
| *__construct* - Constructs a ReflectionParameter     | icon:check[]     | icon:check[]
| *__toString* - Returns the string representation of the ReflectionParameter object
| icon:check[]     | icon:check[]
| *__clone* - Clones parameter                         | icon:check[]     |
| *allowsNull* - Checks if null is allowed             | icon:check[]     | icon:check[]
| *canBePassedByValue* - Returns whether this parameter can be passed by value
| icon:check[]     |
| *export* - Exports a parameter                       | icon:check[]     |
| *getClass* - Gets class                              | icon:check[]     |
| *getDeclaringClass* -  Gets declaring class for the reflected parameter
| icon:check[]     |
| *getDeclaringFunction* -  Gets declaring function for the reflected parameter
| icon:check[]     |
| *getDefaultValue* - Gets default parameter value     | icon:check[]     | icon:check[]
| *getDefaultValueConstantName* - Returns the default value's constant name if default value is constant or null
| icon:check[]     |
| *getName* - Gets parameter name                      | icon:check[]     | icon:check[]
| *getPosition* - Gets parameter position              | icon:check[]     | icon:check[]
| *isArray* - Checks if parameter expects an array     | icon:check[]     | icon:check[]
| *isCallable* - Returns whether parameter MUST be callable
| icon:check[]     |
| *isDefaultValueAvailable* -  Checks if a default value is available
| icon:check[]     | icon:check[]
| *isDefaultValueConstant* - Returns whether the default value of this parameter is constant
| icon:check[]     |
| *isOptional* - Checks if the parameter is optional   | icon:check[]     | icon:check[]
| *isPassedByReference* - Checks if the parameter is passed in by reference
| icon:check[]     | icon:check[]
|===========================

== Property Reflection

[options="header,autowidth", cols="5,2,2", role="table table-bordered table-striped"]
|===========================
| Feature / Methods                                    | PHP5             | Reflect
| class reports information about classes properties
| http://www.php.net/manual/en/class.reflectionproperty.php[ReflectionProperty]
| Bartlett\Reflect\Model\PropertyModel
| *__construct* - Constructs a ReflectionProperty      | icon:check[]     | icon:check[]
| *__toString* - Returns the string representation of the ReflectionProperty object
| icon:check[]     | icon:check[]
| *__clone* - Clones property                          | icon:check[]     |
| *export* - Exports a property                        | icon:check[]     |
| *getDeclaringClass* -  Gets declaring class for the reflected property
| icon:check[]     |
| *getDocComment* - Gets doc comments from a property  | icon:check[]     | icon:check[]
| *getModifiers* - Gets modifiers                      | icon:check[]     |
| *getName* - Gets property name                       | icon:check[]     | icon:check[]
| *getValue* - Gets property value                     | icon:check[]     | icon:check[]
| *isDefault* -  Checks if default value               | icon:check[]     | icon:check[]
| *isPrivate* - Checks if property is private          | icon:check[]     | icon:check[]
| *isProtected* - Checks if property is protected      | icon:check[]     | icon:check[]
| *isPublic* - Checks if property is public            | icon:check[]     | icon:check[]
| *isStatic* - Checks if property is static            | icon:check[]     | icon:check[]
| *setAccessible* - Set property accessibility         | icon:check[]     |
| *setValue* - Set property value                      | icon:check[]     |
|===========================
